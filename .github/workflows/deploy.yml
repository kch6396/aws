name: Deploy to AWS ECS

on:
  push:
    branches:
      - main # main 브랜치에 push될 때 실행

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Build, Push to ECR and Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ GitHub 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ AWS 로그인
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3️⃣ Docker 로그인 (ECR)
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin \
          ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # 4️⃣ Docker Buildx 설정
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 5️⃣ Docker 이미지 빌드 & ECR 푸시 (멀티 아키텍처 지원)
      - name: Build and Push Docker image to Amazon ECR
        run: |
          IMAGE_TAG=$(date +%Y%m%d%H%M%S)  # 현재 시간 기반 태그 생성
          docker buildx build --platform linux/amd64 \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG \
            -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest \
            --push .

      # 6️⃣ ECS 태스크 정의 업데이트
      - name: Update ECS Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ secrets.ECS_TASK_DEFINITION }}
          container-name: ${{ secrets.CONTAINER_NAME }}
          image: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      # 7️⃣ ECS 서비스 업데이트 (배포)
      - name: Deploy to Amazon ECS
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_SERVICE }} \
            --task-definition ${{ steps.task-def.outputs.task-definition-arn }}
